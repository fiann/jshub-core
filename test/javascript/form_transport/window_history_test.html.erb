<% set_title "Form to iframe < Data transport" %>
<% content_for :javascripts do %>

<!-- jsHub source files -->
<%= javascript_include_tag "/js/src/hub/hub-debug.js" %>
<%= javascript_include_tag "/js/src/debug/debug-debug.js" %>
<%= javascript_include_tag "/js/src/logger/logger-debug.js" %>
<%= javascript_include_tag "/js/src/jshub/jshub-debug.js" %>
<%= javascript_include_tag "/js/src/form-transport/form-transport-debug.js" %>

<% end %>
<% content_for :intro do %>
<p>
  This page tests methods for cross-domain data transport via form submission to an iframe.
</p>
<p>
  This page requires network and DNS access.
</p>

<% end %>
<!-- Any HTML you may require for your tests to work properly -->

<script language="javascript" type="text/javascript">
(function() {
	
  /* 
   * Check the browser environment for required JS libraries and other 
   * supporting functionality to avoid false test failure results due to 
   * mis-configuration, etc
   */
  suite.add(new Y.Test.Case({ 
    name : "Environment check",
  
    "test required test dependencies" : function () {
      Y.Assert.isNotUndefined(window.YUI, "The YUI library is required");
      Y.Assert.isNotUndefined(window.jsHub, "The jsHub hub is required");
    },
  
    "test jsHub API dependencies" : function () {
      Y.Assert.isFunction(jsHub.bind, "jsHub.bind() is not a Function");
      Y.Assert.isFunction(jsHub.trigger, "jsHub.trigger() is not a Function");
      Y.Assert.isFunction(jsHub.safe, "jsHub.safe() is not a Function");
    }
  }));
  
  /*
   * Form Transport uses different methods for IE vs other browsers to avoid navigational clicks
   */
  suite.add(new Y.Test.Case({
    name: "Form Transport",
    
    _should: {
      ignore: {
        // FIXME Envjs has a problem with form.method
        "test iframe requests do not appear in the history": (navigator.userAgent.match(/Rhino|Envjs/))
      }
    },    

    "test iframe requests do not appear in the history": function() {
      var method = 'POST',
        url = 'http://echo.jshub.org/cgi-bin/cuzillion/resource.cgi',
        data = { field1 : "value1", field2 : "value2", type: "html" },
        visits = parseInt(window.history.length, 10);
      var result = jsHub.dispatchViaForm(method, url, data);

      // Resume when we recieve the event
      var test = this;
      jsHub.bind('form-transport-complete', 'unittest', function (obj) {
        // determine if this event is the one for the transport we just created
        if (obj.data.iframe.id === result.iframe.id) {
          test.resume(function () {
            Y.Assert.areEqual(result.iframe.id, obj.data.iframe.id, "jsHub.dispatchViaForm() event data is not for the expected transport instance ");
            // FIXME - Safari/Chrome has extra history entries even if the iframe is removed from the DOM.
            // FIXME - Safari/Chrome using window.history.back() results in a "NOT_FOUND_ERR: DOM Exception 8" error ??
            if (obj.data.form){
                obj.data.form.parentNode.removeChild(obj.data.form);
                obj.data.form = null;
            }        
            if (obj.data.iframe){
                obj.data.iframe.parentNode.removeChild(obj.data.iframe);
                obj.data.iframe = null;
            }             
            Y.Assert.areEqual(visits, window.history.length, "jsHub.dispatchViaForm() should not make an entry in the window.history");
          });
        }
      });
      // wait for the event to occur
      this.wait();
    }

  }));
})();

// disable the automatic running of the test runner
var disableTestAutoRun = true;

Y.on('load', function () {
  Y.Test.Runner.run();
});
  
</script> 